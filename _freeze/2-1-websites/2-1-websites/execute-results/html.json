{
  "hash": "46ac0ed205a96f6fb3c37bc1b8bcd3bf",
  "result": {
    "markdown": "---\ntitle: \"Websites\"\nsubtitle: \"SDSS 2023: Reproducible Documents, Websites,<br>and Books with Quarto\"\ninstitute: \"Duke University + Posit\"\nauthor: \"Dr. Mine Ã‡etinkaya-Rundel\"\ndate: \"2023-05-23\"\nfooter: \"[ðŸ”— mine.quarto.pub/quarto-sdss](https://mine.quarto.pub/quarto-sdss)\"\nlogo: \"../images/logo.png\"\nformat:\n  revealjs:\n    theme: ../style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Anatomy of a Quarto project\n\n## Quarto projects\n\n-   Quarto projects have a `_quarto.yml` file\n\n-   The `type` field in this file indicates the type of project:\n\n    -   `default`: Collection of documents\n\n    -   `website`: Websites (and blogs)\n\n    -   `books`: Books ðŸ˜ƒ\n\n## Quarto websites\n\n-   Websites are essentially `format: html` + a Quarto Project\n\n-   But a website is different than `format: html` in that it has multiple pages\n\n-   Websites are our first exploration into Quarto Projects\n\n-   Websites and books are very similar in that they associate multiple pages/resources into a connected resource\n\n## Our turn\n\n::: task\nLet's build a website together from all of the documents we've created so far and highlight the following features of Quarto websites:\n\n-   `_quarto.yml`\n\n-   `index.qmd` / landing page / change landing page\n\n-   Navigation\n\n-   Freeze\n\n-   Themes and dark theme toggle\n\n-   Publishing to QuartoPub\n\n-   An aspect of the workshop webpage that you fancy?\n:::\n\n## Your turn\n\n::: task\nPick up where we left off and\n\n-   Add an [about page](https://quarto.org/docs/websites/website-about.html).\n-   Cross reference one page from another.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_17936d7b\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Our turn\n\n::: task\nLet's now add a blog component to our website.\n\n-   Add a folder called `posts` and create a few minimal blog post entries and collect these from a blog page using the [listings feature](https://quarto.org/docs/websites/website-listings.html).\n\n-   Change the style of listings.\n:::\n\n# Computations\n\n## When should code be re-run? {.smaller}\n\n::: incremental\n-   You might have a reason to re-run all code in a Quarto website (every single chunk in every single document) every time you render the website.\n\n-   But, chances are, that's not what you want.\n\n    -   Just playing around styling -- you probably don't want to run the code again\n\n    -   Changed some code in a document -- you probably want to re-run the code in that document, but not necessarily others\n\n    -   Made a big change affecting computations on many or all pages -- you probably want to re-run all code\n\n-   `freeze` and `cache` options give you fine control over these decisions\n:::\n\n## Freeze {.smaller}\n\n-   The `freeze` option controls when/if computational documents be re-rendered during a global project render:\n\n``` yaml\nexecute:\n  freeze: true  # never re-render during project render\n```\n\n``` yaml\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n\n``` yaml\nexecute:\n  freeze: false  # always re-render\n```\n\n-   The `freeze` option is typically added to a `_metadata.yml` file within a specific directory, affecting all files in that directory.\n\n-   For blogs, set `feeze` in `_metadata.yml` at the root of the `posts` directory.\n\n-   You can have it only within specific subdirectories for more complex sites.\n\n## Cache\n\n-   Cache stores the results of computations for a specific file.\n\n-   Cache invalidation is triggered by changes in chunk source code (or other cache attributes you've defined).\n\n-   `cache` can also be set at the chunk level. Consider using the cache for computationally expensive chunks.\n\n## Freeze vs. cache {.smaller}\n\n-   Freeze option is typically set\n\n    -   for the whole website in `_quarto.yml`, or\n\n    -   for files within a directory in `_metadata.yml` in that directory\n\n``` yaml\nexecute: \n  freeze: auto\n```\n\n-   Cache option is typically set for a given file or for individual chunk(s) in a file.\n\n``` yaml\nexecute:\n  cache: true\n```\n\nor\n\n\n::: {.cell hash='2-1-websites_cache/revealjs/unnamed-chunk-3_fcca383803a0cee06b9e9922b42f59d6'}\n\n````{.cell-code}\n```{{r}}\n#| cache: true\n\n1 + 1\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n# Publishing\n\n## QuartoPub\n\n-   [Quarto Pub](https://quartopub.com/) is a free publishing service for content created with Quarto. It is ideal for blogs, course or project websites, books, presentations, and personal hobby sites.\n\n-   Publish with `quarto publish`:\n\n``` {.bash filename=\"Terminal\"}\nquarto publish quarto-pub\n```\n\n-   Gain a `_publish.yml` that is safe to check into version control.\n\n## Other venues\n\n-   GitHub Pages\n-   Posit Connect\n-   Netlify\n-   Confluence\n-   [More venues](https://quarto.org/docs/publishing/other.html)\n\n# Wrap up\n\n## Learn more\n\n::: learn-more\n[quarto.org/docs/websites](https://quarto.org/docs/websites/)\n\n\n```{=html}\n<iframe src=\"https://quarto.org/docs/websites\" width=\"100%\" height=\"500\" style=\"border:2px solid #123233;\" title=\"Quarto Journal Articles\"></iframe>\n```\n\n:::\n\n## Questions\n\n::: task\nAny questions / anything you'd like to review before we wrap up this module?\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}