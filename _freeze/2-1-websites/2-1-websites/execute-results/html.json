{
  "hash": "651252eb42b0260c16551ba1cf7f4c99",
  "result": {
    "markdown": "---\ntitle: \"Websites\"\nsubtitle: \"SDSS 2023: Reproducible Documents, Websites,<br>and Books with Quarto\"\ninstitute: \"Duke University + Posit\"\nauthor: \"Dr. Mine Ã‡etinkaya-Rundel\"\ndate: \"2023-05-23\"\nfooter: \"[ðŸ”— mine.quarto.pub/quarto-sdss](https://mine.quarto.pub/quarto-sdss)\"\nlogo: \"../images/logo.png\"\nformat:\n  revealjs:\n    theme: ../style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Anatomy of a Quarto project\n\n## Quarto projects\n\n-   Quarto projects have a `_quarto.yml` file\n\n-   The `type` field in this file indicates the type of project:\n\n    -   `default`: Collection of documents\n\n    -   `website`: Websites (and blogs)\n\n    -   `books`: Books ðŸ˜ƒ\n\n## Our turn\n\n::: task\nLet's build a website together from all of the documents we've created so far and highlight the following features of Quarto websites:\n\n-   `_quarto.yml`\n\n-   `index.qmd` / landing page\n\n-   Navigation\n\n-   Freeze\n\n-   Themes and dark theme toggle\n\n-   Publishing\n\n-   An aspect of the workshop webpage that you fancy?\n:::\n\n## Your turn\n\n::: task\nPick up where we left off and\n\n-   Add an [about page](https://quarto.org/docs/websites/website-about.html).\n-   Add a folder called `posts` and create a few minimal blog post entries. Then, using the [listings feature](https://quarto.org/docs/websites/website-listings.html), create a blog page for your website.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_a1a237d7\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Wrap up\n\n## Freeze {.smaller}\n\n-   The `freeze` option controls when/if computational documents be re-rendered during a global project render:\n\n``` yaml\nexecute:\n  freeze: true  # never re-render during project render\n```\n\n``` yaml\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n\n``` yaml\nexecute:\n  freeze: false  # always re-render\n```\n\n-   The `freeze` option is typically added to a `_metadata.yml` file within a specific directory, affecting all files in that directory.\n\n-   For blogs, set `feeze` in `_metadata.yml` at the root of the `posts` directory.\n\n-   You can have it only within specific subdirectories for more complex sites.\n\n## Freeze vs. cache\n\n-   Cache stores the results of computations for a specific file.\n\n-   Cache invalidation is triggered by changes in chunk source code (or other cache attributes you've defined).\n\n-   `cache` can also be set at the chunk level. Consider using the cache for computationally expensive chunks.\n\n## Publishing\n\nSee <https://quarto.org/docs/publishing> for publishing options other than Quarto Pub.\n\n# Wrap up\n\n## Questions\n\n::: task\nAny questions / anything you'd like to review before we wrap up this module?\n:::\n\n",
    "supporting": [
      "2-1-websites_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}